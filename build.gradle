plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "jitpack.io"
		url = "https://jitpack.io"
	}
	jcenter()
	mavenLocal()
}

configurations {
	jarLibs
	implementation.extendsFrom jarLibs
}

afterEvaluate {
	loom.runs.configureEach {
		// https://fabricmc.net/wiki/tutorial:mixin_hotswaps
		vmArg "-javaagent:${ configurations.compileClasspath.find { it.name.contains("sponge-mixin") } }"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	jarLibs 'com.github.ben-manes.caffeine:caffeine:3.1.7'
	jarLibs "com.github.collarmc:pounce:0e8492b68e"
	jarLibs 'org.xerial:sqlite-jdbc:3.43.0.0'

	modImplementation "maven.modrinth:xaeros-world-map:1.34.0_Fabric_1.20"
	modImplementation "maven.modrinth:xaeros-minimap:23.7.0_Fabric_1.20"
	modImplementation files("libs/baritone-api-fabric-1.20.1-elytra-beta-v1.jar")
	modCompileOnly files("libs/BetterPvP_23.7.0_Fabric_1.20.jar")
	modCompileOnly "maven.modrinth:waystones:14.0.1+fabric-1.20"
	modCompileOnly "maven.modrinth:balm:7.0.7+"
	modImplementation "maven.modrinth:fwaystones:3.1.3+mc1.20"
	modRuntimeOnly "maven.modrinth:owo-lib:0.11.1+1.20"
	runtimeOnly "blue.endless:jankson:1.2.2"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

shadowJar {
	configurations = [project.configurations.jarLibs]
	archiveClassifier.set('shadow')

	exclude 'com/google/**'
	exclude 'org/objectweb/**'
	exclude 'org/checkerframework/**'
	exclude 'org/sqlite/native/FreeBSD/**'
	exclude 'org/sqlite/native/Linux-Android/**'
	exclude 'org/sqlite/native/Linux-Musl/**'
	exclude 'org/sqlite/native/Linux/arm/**'
	exclude 'org/sqlite/native/Linux/aarch64/**'
	exclude 'org/sqlite/native/Linux/armv6/**'
	exclude 'org/sqlite/native/Linux/x86/**'
	exclude 'org/sqlite/native/Linux/armv7/**'
	exclude 'org/sqlite/native/Linux/ppc64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	exclude 'org/sqlite/native/Windows/aarch64/**'
	exclude 'org/sqlite/native/Windows/armv7/**'
	relocate "com.collarmc.pounce", "xaeroplus.com.collarmc.pounce.shadow"
	relocate "com.github.benmanes.caffeine", "xaeroplus.com.github.benmanes.caffeine.shadow"
}

remapJar {
	dependsOn shadowJar
	inputFile.set shadowJar.archiveFile.get()
}
